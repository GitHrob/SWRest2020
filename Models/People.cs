using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using RestSharp;

namespace SWApi1.Models
{

    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    // https://app.quicktype.io/#l=cs&r=json2csharp
  
    public partial class PeoplePerson
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("height")]
        public string Height { get; set; }

        [JsonProperty("mass")]
        public string Mass { get; set; }

        [JsonProperty("hair_color")]
        public string HairColor { get; set; }

        [JsonProperty("skin_color")]
        public string SkinColor { get; set; }

        [JsonProperty("eye_color")]
        public string EyeColor { get; set; }

        [JsonProperty("birth_year")]
        public string BirthYear { get; set; }

        [JsonProperty("gender")]
        public string Gender { get; set; }

        [JsonProperty("homeworld")]
        public Uri Homeworld { get; set; }

        [JsonProperty("films")]
        public Uri[] Films { get; set; }

        [JsonProperty("species")]
        public Uri[] Species { get; set; }

        [JsonProperty("vehicles")]
        public Uri[] Vehicles { get; set; }

        [JsonProperty("starships")]
        public Uri[] Starships { get; set; }

        [JsonProperty("created")]
        public DateTimeOffset Created { get; set; }

        [JsonProperty("edited")]
        public DateTimeOffset Edited { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }
    }

    public partial class PeoplePerson
    {
        public static PeoplePerson FromJson(string json) => JsonConvert.DeserializeObject<PeoplePerson>(json);
    }

    public partial class People
    {
        
        public static List<PeoplePerson> getPeople()
        {
            {
                string url = "https://swapi.co/api/people";

                People pp = new People();
                List<PeoplePerson> peoplePersons = new List<PeoplePerson>();

                do
                {
                    pp = People.getPeoplePage(url);
                    foreach (var resultx in pp.Results)
                    {
                        peoplePersons.Add(resultx);
                    }
                    url = pp.Next==null ? "": pp.Next.OriginalString;
                }
                while (pp != null && pp.Next!=null);


                return peoplePersons;
            }
        }

        public static PeoplePerson getPeoplePersonId (int id)
        {
            //dotnet add package RestSharp --version 106.10.1
            RestClient client = new RestClient("https://swapi.co/api/people/id");
            RestRequest request = new RestRequest(Method.GET);
            IRestResponse response = client.Execute(request);

            PeoplePerson pp = new PeoplePerson();
            pp = JsonConvert.DeserializeObject<PeoplePerson>(response.Content);

            return pp;
        }

        public static People getPeoplePage(string pageUrl)
        {
            string url = pageUrl;
 
            RestClient client = new RestClient(url);
            RestRequest request = new RestRequest(Method.GET);
            IRestResponse response = client.Execute(request);

            People pp = new People();
            pp = JsonConvert.DeserializeObject<People>(response.Content);

            return pp;
        }

    }

    public partial class People
    {
        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("next")]
        public Uri Next { get; set; }

        [JsonProperty("previous")]
        public object Previous { get; set; }

        [JsonProperty("results")]
        public PeoplePerson[] Results { get; set; }
    }
}
